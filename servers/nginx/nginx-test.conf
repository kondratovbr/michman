user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    include mime.types;
    default_type application/octet-stream;

    #include uwsgi_params;

    # Keep an idle connection to the upstream server open for 60 seconds.
    keepalive_timeout 60s;

    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy no-referrer;

    charset utf-8;

    #include /etc/nginx/conf.d/*.conf;
    #include /etc/nginx/sites-enabled/*;

    # SSL configuration
    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    #ssl_prefer_server_ciphers on;

    server {

        # Limit request body size to 5 Mb.
        # TODO: May require tweaking for an actual application.
        client_max_body_size 5m;

        listen 80;

        server_name localhost *.localhost;

        root /root/django_demo;

        location = /favicon.ico { access_log off; log_not_found off; }

        location / {
            include proxy_params;
            proxy_pass http://unix:/run/gunicorn.sock;
        }

        # Deny all requests for dotfiles, except for Let's Encrypt .well-known directory, in case there's one.
        location ~ /\.(?!well-known).* {
            deny all;
        }

    }

    # Drop connections without the 'Host' parameter or if it doesn't match any of the actual ones.
    server {
        # The same port as the actual server.
        listen      80 default_server;
        server_name "";
        # Nginx-specific return code that tells nginx to silently drop the connection.
        return      444;
    }

}
